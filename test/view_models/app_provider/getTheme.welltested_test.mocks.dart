// Mocks generated by Mockito 5.4.0 from annotations
// in flutter_ebook_app/test/view_models/app_provider/getTheme.welltested_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i56;
import 'dart:ui' as _i8;

import 'package:flutter/cupertino.dart' as _i3;
import 'package:flutter/foundation.dart' as _i54;
import 'package:flutter/src/material/app_bar_theme.dart' as _i12;
import 'package:flutter/src/material/badge_theme.dart' as _i13;
import 'package:flutter/src/material/banner_theme.dart' as _i14;
import 'package:flutter/src/material/bottom_app_bar_theme.dart' as _i15;
import 'package:flutter/src/material/bottom_navigation_bar_theme.dart' as _i16;
import 'package:flutter/src/material/bottom_sheet_theme.dart' as _i17;
import 'package:flutter/src/material/button_bar_theme.dart' as _i18;
import 'package:flutter/src/material/button_theme.dart' as _i19;
import 'package:flutter/src/material/card_theme.dart' as _i20;
import 'package:flutter/src/material/checkbox_theme.dart' as _i21;
import 'package:flutter/src/material/chip_theme.dart' as _i22;
import 'package:flutter/src/material/color_scheme.dart' as _i9;
import 'package:flutter/src/material/data_table_theme.dart' as _i23;
import 'package:flutter/src/material/dialog_theme.dart' as _i24;
import 'package:flutter/src/material/divider_theme.dart' as _i25;
import 'package:flutter/src/material/drawer_theme.dart' as _i26;
import 'package:flutter/src/material/dropdown_menu_theme.dart' as _i27;
import 'package:flutter/src/material/elevated_button_theme.dart' as _i28;
import 'package:flutter/src/material/expansion_tile_theme.dart' as _i29;
import 'package:flutter/src/material/filled_button_theme.dart' as _i30;
import 'package:flutter/src/material/floating_action_button_theme.dart' as _i31;
import 'package:flutter/src/material/icon_button_theme.dart' as _i32;
import 'package:flutter/src/material/ink_well.dart' as _i6;
import 'package:flutter/src/material/input_decorator.dart' as _i2;
import 'package:flutter/src/material/list_tile_theme.dart' as _i33;
import 'package:flutter/src/material/menu_bar_theme.dart' as _i34;
import 'package:flutter/src/material/menu_button_theme.dart' as _i35;
import 'package:flutter/src/material/menu_theme.dart' as _i36;
import 'package:flutter/src/material/navigation_bar_theme.dart' as _i37;
import 'package:flutter/src/material/navigation_drawer_theme.dart' as _i38;
import 'package:flutter/src/material/navigation_rail_theme.dart' as _i39;
import 'package:flutter/src/material/outlined_button_theme.dart' as _i40;
import 'package:flutter/src/material/page_transitions_theme.dart' as _i4;
import 'package:flutter/src/material/popup_menu_theme.dart' as _i41;
import 'package:flutter/src/material/progress_indicator_theme.dart' as _i42;
import 'package:flutter/src/material/radio_theme.dart' as _i43;
import 'package:flutter/src/material/scrollbar_theme.dart' as _i5;
import 'package:flutter/src/material/segmented_button_theme.dart' as _i44;
import 'package:flutter/src/material/slider_theme.dart' as _i45;
import 'package:flutter/src/material/snack_bar_theme.dart' as _i46;
import 'package:flutter/src/material/switch_theme.dart' as _i47;
import 'package:flutter/src/material/tab_bar_theme.dart' as _i48;
import 'package:flutter/src/material/text_button_theme.dart' as _i49;
import 'package:flutter/src/material/text_selection_theme.dart' as _i50;
import 'package:flutter/src/material/text_theme.dart' as _i10;
import 'package:flutter/src/material/theme_data.dart' as _i7;
import 'package:flutter/src/material/time_picker_theme.dart' as _i51;
import 'package:flutter/src/material/toggle_buttons_theme.dart' as _i52;
import 'package:flutter/src/material/tooltip_theme.dart' as _i53;
import 'package:flutter/src/material/typography.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i55;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeInputDecorationTheme_0 extends _i1.SmartFake
    implements _i2.InputDecorationTheme {
  _FakeInputDecorationTheme_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakePageTransitionsTheme_1 extends _i1.SmartFake
    implements _i4.PageTransitionsTheme {
  _FakePageTransitionsTheme_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeScrollbarThemeData_2 extends _i1.SmartFake
    implements _i5.ScrollbarThemeData {
  _FakeScrollbarThemeData_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeInteractiveInkFeatureFactory_3 extends _i1.SmartFake
    implements _i6.InteractiveInkFeatureFactory {
  _FakeInteractiveInkFeatureFactory_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVisualDensity_4 extends _i1.SmartFake implements _i7.VisualDensity {
  _FakeVisualDensity_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeColor_5 extends _i1.SmartFake implements _i8.Color {
  _FakeColor_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeColorScheme_6 extends _i1.SmartFake implements _i9.ColorScheme {
  _FakeColorScheme_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeIconThemeData_7 extends _i1.SmartFake implements _i3.IconThemeData {
  _FakeIconThemeData_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTextTheme_8 extends _i1.SmartFake implements _i10.TextTheme {
  _FakeTextTheme_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTypography_9 extends _i1.SmartFake implements _i11.Typography {
  _FakeTypography_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeAppBarTheme_10 extends _i1.SmartFake implements _i12.AppBarTheme {
  _FakeAppBarTheme_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeBadgeThemeData_11 extends _i1.SmartFake
    implements _i13.BadgeThemeData {
  _FakeBadgeThemeData_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMaterialBannerThemeData_12 extends _i1.SmartFake
    implements _i14.MaterialBannerThemeData {
  _FakeMaterialBannerThemeData_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeBottomAppBarTheme_13 extends _i1.SmartFake
    implements _i15.BottomAppBarTheme {
  _FakeBottomAppBarTheme_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeBottomNavigationBarThemeData_14 extends _i1.SmartFake
    implements _i16.BottomNavigationBarThemeData {
  _FakeBottomNavigationBarThemeData_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeBottomSheetThemeData_15 extends _i1.SmartFake
    implements _i17.BottomSheetThemeData {
  _FakeBottomSheetThemeData_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeButtonBarThemeData_16 extends _i1.SmartFake
    implements _i18.ButtonBarThemeData {
  _FakeButtonBarThemeData_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeButtonThemeData_17 extends _i1.SmartFake
    implements _i19.ButtonThemeData {
  _FakeButtonThemeData_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeCardTheme_18 extends _i1.SmartFake implements _i20.CardTheme {
  _FakeCardTheme_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeCheckboxThemeData_19 extends _i1.SmartFake
    implements _i21.CheckboxThemeData {
  _FakeCheckboxThemeData_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeChipThemeData_20 extends _i1.SmartFake
    implements _i22.ChipThemeData {
  _FakeChipThemeData_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDataTableThemeData_21 extends _i1.SmartFake
    implements _i23.DataTableThemeData {
  _FakeDataTableThemeData_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDialogTheme_22 extends _i1.SmartFake implements _i24.DialogTheme {
  _FakeDialogTheme_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDividerThemeData_23 extends _i1.SmartFake
    implements _i25.DividerThemeData {
  _FakeDividerThemeData_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDrawerThemeData_24 extends _i1.SmartFake
    implements _i26.DrawerThemeData {
  _FakeDrawerThemeData_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDropdownMenuThemeData_25 extends _i1.SmartFake
    implements _i27.DropdownMenuThemeData {
  _FakeDropdownMenuThemeData_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeElevatedButtonThemeData_26 extends _i1.SmartFake
    implements _i28.ElevatedButtonThemeData {
  _FakeElevatedButtonThemeData_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeExpansionTileThemeData_27 extends _i1.SmartFake
    implements _i29.ExpansionTileThemeData {
  _FakeExpansionTileThemeData_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeFilledButtonThemeData_28 extends _i1.SmartFake
    implements _i30.FilledButtonThemeData {
  _FakeFilledButtonThemeData_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeFloatingActionButtonThemeData_29 extends _i1.SmartFake
    implements _i31.FloatingActionButtonThemeData {
  _FakeFloatingActionButtonThemeData_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeIconButtonThemeData_30 extends _i1.SmartFake
    implements _i32.IconButtonThemeData {
  _FakeIconButtonThemeData_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeListTileThemeData_31 extends _i1.SmartFake
    implements _i33.ListTileThemeData {
  _FakeListTileThemeData_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMenuBarThemeData_32 extends _i1.SmartFake
    implements _i34.MenuBarThemeData {
  _FakeMenuBarThemeData_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMenuButtonThemeData_33 extends _i1.SmartFake
    implements _i35.MenuButtonThemeData {
  _FakeMenuButtonThemeData_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMenuThemeData_34 extends _i1.SmartFake
    implements _i36.MenuThemeData {
  _FakeMenuThemeData_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeNavigationBarThemeData_35 extends _i1.SmartFake
    implements _i37.NavigationBarThemeData {
  _FakeNavigationBarThemeData_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeNavigationDrawerThemeData_36 extends _i1.SmartFake
    implements _i38.NavigationDrawerThemeData {
  _FakeNavigationDrawerThemeData_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeNavigationRailThemeData_37 extends _i1.SmartFake
    implements _i39.NavigationRailThemeData {
  _FakeNavigationRailThemeData_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeOutlinedButtonThemeData_38 extends _i1.SmartFake
    implements _i40.OutlinedButtonThemeData {
  _FakeOutlinedButtonThemeData_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakePopupMenuThemeData_39 extends _i1.SmartFake
    implements _i41.PopupMenuThemeData {
  _FakePopupMenuThemeData_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeProgressIndicatorThemeData_40 extends _i1.SmartFake
    implements _i42.ProgressIndicatorThemeData {
  _FakeProgressIndicatorThemeData_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeRadioThemeData_41 extends _i1.SmartFake
    implements _i43.RadioThemeData {
  _FakeRadioThemeData_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeSegmentedButtonThemeData_42 extends _i1.SmartFake
    implements _i44.SegmentedButtonThemeData {
  _FakeSegmentedButtonThemeData_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeSliderThemeData_43 extends _i1.SmartFake
    implements _i45.SliderThemeData {
  _FakeSliderThemeData_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeSnackBarThemeData_44 extends _i1.SmartFake
    implements _i46.SnackBarThemeData {
  _FakeSnackBarThemeData_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeSwitchThemeData_45 extends _i1.SmartFake
    implements _i47.SwitchThemeData {
  _FakeSwitchThemeData_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTabBarTheme_46 extends _i1.SmartFake implements _i48.TabBarTheme {
  _FakeTabBarTheme_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTextButtonThemeData_47 extends _i1.SmartFake
    implements _i49.TextButtonThemeData {
  _FakeTextButtonThemeData_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTextSelectionThemeData_48 extends _i1.SmartFake
    implements _i50.TextSelectionThemeData {
  _FakeTextSelectionThemeData_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTimePickerThemeData_49 extends _i1.SmartFake
    implements _i51.TimePickerThemeData {
  _FakeTimePickerThemeData_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeToggleButtonsThemeData_50 extends _i1.SmartFake
    implements _i52.ToggleButtonsThemeData {
  _FakeToggleButtonsThemeData_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTooltipThemeData_51 extends _i1.SmartFake
    implements _i53.TooltipThemeData {
  _FakeTooltipThemeData_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeThemeData_52 extends _i1.SmartFake implements _i7.ThemeData {
  _FakeThemeData_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDiagnosticsNode_53 extends _i1.SmartFake
    implements _i3.DiagnosticsNode {
  _FakeDiagnosticsNode_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({
    _i54.TextTreeConfiguration? parentConfiguration,
    _i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info,
  }) =>
      super.toString();
}

/// A class which mocks [ThemeData].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockThemeData extends _i1.Mock implements _i7.ThemeData {
  MockThemeData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get applyElevationOverlayColor => (super.noSuchMethod(
        Invocation.getter(#applyElevationOverlayColor),
        returnValue: false,
      ) as bool);
  @override
  Map<Object, _i7.ThemeExtension<dynamic>> get extensions =>
      (super.noSuchMethod(
        Invocation.getter(#extensions),
        returnValue: <Object, _i7.ThemeExtension<dynamic>>{},
      ) as Map<Object, _i7.ThemeExtension<dynamic>>);
  @override
  _i2.InputDecorationTheme get inputDecorationTheme => (super.noSuchMethod(
        Invocation.getter(#inputDecorationTheme),
        returnValue: _FakeInputDecorationTheme_0(
          this,
          Invocation.getter(#inputDecorationTheme),
        ),
      ) as _i2.InputDecorationTheme);
  @override
  _i7.MaterialTapTargetSize get materialTapTargetSize => (super.noSuchMethod(
        Invocation.getter(#materialTapTargetSize),
        returnValue: _i7.MaterialTapTargetSize.padded,
      ) as _i7.MaterialTapTargetSize);
  @override
  _i4.PageTransitionsTheme get pageTransitionsTheme => (super.noSuchMethod(
        Invocation.getter(#pageTransitionsTheme),
        returnValue: _FakePageTransitionsTheme_1(
          this,
          Invocation.getter(#pageTransitionsTheme),
        ),
      ) as _i4.PageTransitionsTheme);
  @override
  _i3.TargetPlatform get platform => (super.noSuchMethod(
        Invocation.getter(#platform),
        returnValue: _i3.TargetPlatform.android,
      ) as _i3.TargetPlatform);
  @override
  _i5.ScrollbarThemeData get scrollbarTheme => (super.noSuchMethod(
        Invocation.getter(#scrollbarTheme),
        returnValue: _FakeScrollbarThemeData_2(
          this,
          Invocation.getter(#scrollbarTheme),
        ),
      ) as _i5.ScrollbarThemeData);
  @override
  _i6.InteractiveInkFeatureFactory get splashFactory => (super.noSuchMethod(
        Invocation.getter(#splashFactory),
        returnValue: _FakeInteractiveInkFeatureFactory_3(
          this,
          Invocation.getter(#splashFactory),
        ),
      ) as _i6.InteractiveInkFeatureFactory);
  @override
  bool get useMaterial3 => (super.noSuchMethod(
        Invocation.getter(#useMaterial3),
        returnValue: false,
      ) as bool);
  @override
  _i7.VisualDensity get visualDensity => (super.noSuchMethod(
        Invocation.getter(#visualDensity),
        returnValue: _FakeVisualDensity_4(
          this,
          Invocation.getter(#visualDensity),
        ),
      ) as _i7.VisualDensity);
  @override
  _i8.Color get canvasColor => (super.noSuchMethod(
        Invocation.getter(#canvasColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#canvasColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get cardColor => (super.noSuchMethod(
        Invocation.getter(#cardColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#cardColor),
        ),
      ) as _i8.Color);
  @override
  _i9.ColorScheme get colorScheme => (super.noSuchMethod(
        Invocation.getter(#colorScheme),
        returnValue: _FakeColorScheme_6(
          this,
          Invocation.getter(#colorScheme),
        ),
      ) as _i9.ColorScheme);
  @override
  _i8.Color get dialogBackgroundColor => (super.noSuchMethod(
        Invocation.getter(#dialogBackgroundColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#dialogBackgroundColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get disabledColor => (super.noSuchMethod(
        Invocation.getter(#disabledColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#disabledColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get dividerColor => (super.noSuchMethod(
        Invocation.getter(#dividerColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#dividerColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get focusColor => (super.noSuchMethod(
        Invocation.getter(#focusColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#focusColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get highlightColor => (super.noSuchMethod(
        Invocation.getter(#highlightColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#highlightColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get hintColor => (super.noSuchMethod(
        Invocation.getter(#hintColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#hintColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get hoverColor => (super.noSuchMethod(
        Invocation.getter(#hoverColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#hoverColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get indicatorColor => (super.noSuchMethod(
        Invocation.getter(#indicatorColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#indicatorColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get primaryColor => (super.noSuchMethod(
        Invocation.getter(#primaryColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#primaryColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get primaryColorDark => (super.noSuchMethod(
        Invocation.getter(#primaryColorDark),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#primaryColorDark),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get primaryColorLight => (super.noSuchMethod(
        Invocation.getter(#primaryColorLight),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#primaryColorLight),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get scaffoldBackgroundColor => (super.noSuchMethod(
        Invocation.getter(#scaffoldBackgroundColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#scaffoldBackgroundColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get secondaryHeaderColor => (super.noSuchMethod(
        Invocation.getter(#secondaryHeaderColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#secondaryHeaderColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get shadowColor => (super.noSuchMethod(
        Invocation.getter(#shadowColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#shadowColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get splashColor => (super.noSuchMethod(
        Invocation.getter(#splashColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#splashColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get unselectedWidgetColor => (super.noSuchMethod(
        Invocation.getter(#unselectedWidgetColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#unselectedWidgetColor),
        ),
      ) as _i8.Color);
  @override
  _i3.IconThemeData get iconTheme => (super.noSuchMethod(
        Invocation.getter(#iconTheme),
        returnValue: _FakeIconThemeData_7(
          this,
          Invocation.getter(#iconTheme),
        ),
      ) as _i3.IconThemeData);
  @override
  _i3.IconThemeData get primaryIconTheme => (super.noSuchMethod(
        Invocation.getter(#primaryIconTheme),
        returnValue: _FakeIconThemeData_7(
          this,
          Invocation.getter(#primaryIconTheme),
        ),
      ) as _i3.IconThemeData);
  @override
  _i10.TextTheme get primaryTextTheme => (super.noSuchMethod(
        Invocation.getter(#primaryTextTheme),
        returnValue: _FakeTextTheme_8(
          this,
          Invocation.getter(#primaryTextTheme),
        ),
      ) as _i10.TextTheme);
  @override
  _i10.TextTheme get textTheme => (super.noSuchMethod(
        Invocation.getter(#textTheme),
        returnValue: _FakeTextTheme_8(
          this,
          Invocation.getter(#textTheme),
        ),
      ) as _i10.TextTheme);
  @override
  _i11.Typography get typography => (super.noSuchMethod(
        Invocation.getter(#typography),
        returnValue: _FakeTypography_9(
          this,
          Invocation.getter(#typography),
        ),
      ) as _i11.Typography);
  @override
  _i12.AppBarTheme get appBarTheme => (super.noSuchMethod(
        Invocation.getter(#appBarTheme),
        returnValue: _FakeAppBarTheme_10(
          this,
          Invocation.getter(#appBarTheme),
        ),
      ) as _i12.AppBarTheme);
  @override
  _i13.BadgeThemeData get badgeTheme => (super.noSuchMethod(
        Invocation.getter(#badgeTheme),
        returnValue: _FakeBadgeThemeData_11(
          this,
          Invocation.getter(#badgeTheme),
        ),
      ) as _i13.BadgeThemeData);
  @override
  _i14.MaterialBannerThemeData get bannerTheme => (super.noSuchMethod(
        Invocation.getter(#bannerTheme),
        returnValue: _FakeMaterialBannerThemeData_12(
          this,
          Invocation.getter(#bannerTheme),
        ),
      ) as _i14.MaterialBannerThemeData);
  @override
  _i15.BottomAppBarTheme get bottomAppBarTheme => (super.noSuchMethod(
        Invocation.getter(#bottomAppBarTheme),
        returnValue: _FakeBottomAppBarTheme_13(
          this,
          Invocation.getter(#bottomAppBarTheme),
        ),
      ) as _i15.BottomAppBarTheme);
  @override
  _i16.BottomNavigationBarThemeData get bottomNavigationBarTheme =>
      (super.noSuchMethod(
        Invocation.getter(#bottomNavigationBarTheme),
        returnValue: _FakeBottomNavigationBarThemeData_14(
          this,
          Invocation.getter(#bottomNavigationBarTheme),
        ),
      ) as _i16.BottomNavigationBarThemeData);
  @override
  _i17.BottomSheetThemeData get bottomSheetTheme => (super.noSuchMethod(
        Invocation.getter(#bottomSheetTheme),
        returnValue: _FakeBottomSheetThemeData_15(
          this,
          Invocation.getter(#bottomSheetTheme),
        ),
      ) as _i17.BottomSheetThemeData);
  @override
  _i18.ButtonBarThemeData get buttonBarTheme => (super.noSuchMethod(
        Invocation.getter(#buttonBarTheme),
        returnValue: _FakeButtonBarThemeData_16(
          this,
          Invocation.getter(#buttonBarTheme),
        ),
      ) as _i18.ButtonBarThemeData);
  @override
  _i19.ButtonThemeData get buttonTheme => (super.noSuchMethod(
        Invocation.getter(#buttonTheme),
        returnValue: _FakeButtonThemeData_17(
          this,
          Invocation.getter(#buttonTheme),
        ),
      ) as _i19.ButtonThemeData);
  @override
  _i20.CardTheme get cardTheme => (super.noSuchMethod(
        Invocation.getter(#cardTheme),
        returnValue: _FakeCardTheme_18(
          this,
          Invocation.getter(#cardTheme),
        ),
      ) as _i20.CardTheme);
  @override
  _i21.CheckboxThemeData get checkboxTheme => (super.noSuchMethod(
        Invocation.getter(#checkboxTheme),
        returnValue: _FakeCheckboxThemeData_19(
          this,
          Invocation.getter(#checkboxTheme),
        ),
      ) as _i21.CheckboxThemeData);
  @override
  _i22.ChipThemeData get chipTheme => (super.noSuchMethod(
        Invocation.getter(#chipTheme),
        returnValue: _FakeChipThemeData_20(
          this,
          Invocation.getter(#chipTheme),
        ),
      ) as _i22.ChipThemeData);
  @override
  _i23.DataTableThemeData get dataTableTheme => (super.noSuchMethod(
        Invocation.getter(#dataTableTheme),
        returnValue: _FakeDataTableThemeData_21(
          this,
          Invocation.getter(#dataTableTheme),
        ),
      ) as _i23.DataTableThemeData);
  @override
  _i24.DialogTheme get dialogTheme => (super.noSuchMethod(
        Invocation.getter(#dialogTheme),
        returnValue: _FakeDialogTheme_22(
          this,
          Invocation.getter(#dialogTheme),
        ),
      ) as _i24.DialogTheme);
  @override
  _i25.DividerThemeData get dividerTheme => (super.noSuchMethod(
        Invocation.getter(#dividerTheme),
        returnValue: _FakeDividerThemeData_23(
          this,
          Invocation.getter(#dividerTheme),
        ),
      ) as _i25.DividerThemeData);
  @override
  _i26.DrawerThemeData get drawerTheme => (super.noSuchMethod(
        Invocation.getter(#drawerTheme),
        returnValue: _FakeDrawerThemeData_24(
          this,
          Invocation.getter(#drawerTheme),
        ),
      ) as _i26.DrawerThemeData);
  @override
  _i27.DropdownMenuThemeData get dropdownMenuTheme => (super.noSuchMethod(
        Invocation.getter(#dropdownMenuTheme),
        returnValue: _FakeDropdownMenuThemeData_25(
          this,
          Invocation.getter(#dropdownMenuTheme),
        ),
      ) as _i27.DropdownMenuThemeData);
  @override
  _i28.ElevatedButtonThemeData get elevatedButtonTheme => (super.noSuchMethod(
        Invocation.getter(#elevatedButtonTheme),
        returnValue: _FakeElevatedButtonThemeData_26(
          this,
          Invocation.getter(#elevatedButtonTheme),
        ),
      ) as _i28.ElevatedButtonThemeData);
  @override
  _i29.ExpansionTileThemeData get expansionTileTheme => (super.noSuchMethod(
        Invocation.getter(#expansionTileTheme),
        returnValue: _FakeExpansionTileThemeData_27(
          this,
          Invocation.getter(#expansionTileTheme),
        ),
      ) as _i29.ExpansionTileThemeData);
  @override
  _i30.FilledButtonThemeData get filledButtonTheme => (super.noSuchMethod(
        Invocation.getter(#filledButtonTheme),
        returnValue: _FakeFilledButtonThemeData_28(
          this,
          Invocation.getter(#filledButtonTheme),
        ),
      ) as _i30.FilledButtonThemeData);
  @override
  _i31.FloatingActionButtonThemeData get floatingActionButtonTheme =>
      (super.noSuchMethod(
        Invocation.getter(#floatingActionButtonTheme),
        returnValue: _FakeFloatingActionButtonThemeData_29(
          this,
          Invocation.getter(#floatingActionButtonTheme),
        ),
      ) as _i31.FloatingActionButtonThemeData);
  @override
  _i32.IconButtonThemeData get iconButtonTheme => (super.noSuchMethod(
        Invocation.getter(#iconButtonTheme),
        returnValue: _FakeIconButtonThemeData_30(
          this,
          Invocation.getter(#iconButtonTheme),
        ),
      ) as _i32.IconButtonThemeData);
  @override
  _i33.ListTileThemeData get listTileTheme => (super.noSuchMethod(
        Invocation.getter(#listTileTheme),
        returnValue: _FakeListTileThemeData_31(
          this,
          Invocation.getter(#listTileTheme),
        ),
      ) as _i33.ListTileThemeData);
  @override
  _i34.MenuBarThemeData get menuBarTheme => (super.noSuchMethod(
        Invocation.getter(#menuBarTheme),
        returnValue: _FakeMenuBarThemeData_32(
          this,
          Invocation.getter(#menuBarTheme),
        ),
      ) as _i34.MenuBarThemeData);
  @override
  _i35.MenuButtonThemeData get menuButtonTheme => (super.noSuchMethod(
        Invocation.getter(#menuButtonTheme),
        returnValue: _FakeMenuButtonThemeData_33(
          this,
          Invocation.getter(#menuButtonTheme),
        ),
      ) as _i35.MenuButtonThemeData);
  @override
  _i36.MenuThemeData get menuTheme => (super.noSuchMethod(
        Invocation.getter(#menuTheme),
        returnValue: _FakeMenuThemeData_34(
          this,
          Invocation.getter(#menuTheme),
        ),
      ) as _i36.MenuThemeData);
  @override
  _i37.NavigationBarThemeData get navigationBarTheme => (super.noSuchMethod(
        Invocation.getter(#navigationBarTheme),
        returnValue: _FakeNavigationBarThemeData_35(
          this,
          Invocation.getter(#navigationBarTheme),
        ),
      ) as _i37.NavigationBarThemeData);
  @override
  _i38.NavigationDrawerThemeData get navigationDrawerTheme =>
      (super.noSuchMethod(
        Invocation.getter(#navigationDrawerTheme),
        returnValue: _FakeNavigationDrawerThemeData_36(
          this,
          Invocation.getter(#navigationDrawerTheme),
        ),
      ) as _i38.NavigationDrawerThemeData);
  @override
  _i39.NavigationRailThemeData get navigationRailTheme => (super.noSuchMethod(
        Invocation.getter(#navigationRailTheme),
        returnValue: _FakeNavigationRailThemeData_37(
          this,
          Invocation.getter(#navigationRailTheme),
        ),
      ) as _i39.NavigationRailThemeData);
  @override
  _i40.OutlinedButtonThemeData get outlinedButtonTheme => (super.noSuchMethod(
        Invocation.getter(#outlinedButtonTheme),
        returnValue: _FakeOutlinedButtonThemeData_38(
          this,
          Invocation.getter(#outlinedButtonTheme),
        ),
      ) as _i40.OutlinedButtonThemeData);
  @override
  _i41.PopupMenuThemeData get popupMenuTheme => (super.noSuchMethod(
        Invocation.getter(#popupMenuTheme),
        returnValue: _FakePopupMenuThemeData_39(
          this,
          Invocation.getter(#popupMenuTheme),
        ),
      ) as _i41.PopupMenuThemeData);
  @override
  _i42.ProgressIndicatorThemeData get progressIndicatorTheme =>
      (super.noSuchMethod(
        Invocation.getter(#progressIndicatorTheme),
        returnValue: _FakeProgressIndicatorThemeData_40(
          this,
          Invocation.getter(#progressIndicatorTheme),
        ),
      ) as _i42.ProgressIndicatorThemeData);
  @override
  _i43.RadioThemeData get radioTheme => (super.noSuchMethod(
        Invocation.getter(#radioTheme),
        returnValue: _FakeRadioThemeData_41(
          this,
          Invocation.getter(#radioTheme),
        ),
      ) as _i43.RadioThemeData);
  @override
  _i44.SegmentedButtonThemeData get segmentedButtonTheme => (super.noSuchMethod(
        Invocation.getter(#segmentedButtonTheme),
        returnValue: _FakeSegmentedButtonThemeData_42(
          this,
          Invocation.getter(#segmentedButtonTheme),
        ),
      ) as _i44.SegmentedButtonThemeData);
  @override
  _i45.SliderThemeData get sliderTheme => (super.noSuchMethod(
        Invocation.getter(#sliderTheme),
        returnValue: _FakeSliderThemeData_43(
          this,
          Invocation.getter(#sliderTheme),
        ),
      ) as _i45.SliderThemeData);
  @override
  _i46.SnackBarThemeData get snackBarTheme => (super.noSuchMethod(
        Invocation.getter(#snackBarTheme),
        returnValue: _FakeSnackBarThemeData_44(
          this,
          Invocation.getter(#snackBarTheme),
        ),
      ) as _i46.SnackBarThemeData);
  @override
  _i47.SwitchThemeData get switchTheme => (super.noSuchMethod(
        Invocation.getter(#switchTheme),
        returnValue: _FakeSwitchThemeData_45(
          this,
          Invocation.getter(#switchTheme),
        ),
      ) as _i47.SwitchThemeData);
  @override
  _i48.TabBarTheme get tabBarTheme => (super.noSuchMethod(
        Invocation.getter(#tabBarTheme),
        returnValue: _FakeTabBarTheme_46(
          this,
          Invocation.getter(#tabBarTheme),
        ),
      ) as _i48.TabBarTheme);
  @override
  _i49.TextButtonThemeData get textButtonTheme => (super.noSuchMethod(
        Invocation.getter(#textButtonTheme),
        returnValue: _FakeTextButtonThemeData_47(
          this,
          Invocation.getter(#textButtonTheme),
        ),
      ) as _i49.TextButtonThemeData);
  @override
  _i50.TextSelectionThemeData get textSelectionTheme => (super.noSuchMethod(
        Invocation.getter(#textSelectionTheme),
        returnValue: _FakeTextSelectionThemeData_48(
          this,
          Invocation.getter(#textSelectionTheme),
        ),
      ) as _i50.TextSelectionThemeData);
  @override
  _i51.TimePickerThemeData get timePickerTheme => (super.noSuchMethod(
        Invocation.getter(#timePickerTheme),
        returnValue: _FakeTimePickerThemeData_49(
          this,
          Invocation.getter(#timePickerTheme),
        ),
      ) as _i51.TimePickerThemeData);
  @override
  _i52.ToggleButtonsThemeData get toggleButtonsTheme => (super.noSuchMethod(
        Invocation.getter(#toggleButtonsTheme),
        returnValue: _FakeToggleButtonsThemeData_50(
          this,
          Invocation.getter(#toggleButtonsTheme),
        ),
      ) as _i52.ToggleButtonsThemeData);
  @override
  _i53.TooltipThemeData get tooltipTheme => (super.noSuchMethod(
        Invocation.getter(#tooltipTheme),
        returnValue: _FakeTooltipThemeData_51(
          this,
          Invocation.getter(#tooltipTheme),
        ),
      ) as _i53.TooltipThemeData);
  @override
  _i8.Brightness get brightness => (super.noSuchMethod(
        Invocation.getter(#brightness),
        returnValue: _i8.Brightness.dark,
      ) as _i8.Brightness);
  @override
  _i8.Color get bottomAppBarColor => (super.noSuchMethod(
        Invocation.getter(#bottomAppBarColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#bottomAppBarColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get selectedRowColor => (super.noSuchMethod(
        Invocation.getter(#selectedRowColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#selectedRowColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get accentColor => (super.noSuchMethod(
        Invocation.getter(#accentColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#accentColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Brightness get accentColorBrightness => (super.noSuchMethod(
        Invocation.getter(#accentColorBrightness),
        returnValue: _i8.Brightness.dark,
      ) as _i8.Brightness);
  @override
  _i10.TextTheme get accentTextTheme => (super.noSuchMethod(
        Invocation.getter(#accentTextTheme),
        returnValue: _FakeTextTheme_8(
          this,
          Invocation.getter(#accentTextTheme),
        ),
      ) as _i10.TextTheme);
  @override
  _i3.IconThemeData get accentIconTheme => (super.noSuchMethod(
        Invocation.getter(#accentIconTheme),
        returnValue: _FakeIconThemeData_7(
          this,
          Invocation.getter(#accentIconTheme),
        ),
      ) as _i3.IconThemeData);
  @override
  _i8.Color get buttonColor => (super.noSuchMethod(
        Invocation.getter(#buttonColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#buttonColor),
        ),
      ) as _i8.Color);
  @override
  bool get fixTextFieldOutlineLabel => (super.noSuchMethod(
        Invocation.getter(#fixTextFieldOutlineLabel),
        returnValue: false,
      ) as bool);
  @override
  _i8.Brightness get primaryColorBrightness => (super.noSuchMethod(
        Invocation.getter(#primaryColorBrightness),
        returnValue: _i8.Brightness.dark,
      ) as _i8.Brightness);
  @override
  _i8.Color get errorColor => (super.noSuchMethod(
        Invocation.getter(#errorColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#errorColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get backgroundColor => (super.noSuchMethod(
        Invocation.getter(#backgroundColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#backgroundColor),
        ),
      ) as _i8.Color);
  @override
  _i8.Color get toggleableActiveColor => (super.noSuchMethod(
        Invocation.getter(#toggleableActiveColor),
        returnValue: _FakeColor_5(
          this,
          Invocation.getter(#toggleableActiveColor),
        ),
      ) as _i8.Color);
  @override
  _i7.ThemeData copyWith({
    bool? applyElevationOverlayColor,
    _i3.NoDefaultCupertinoThemeData? cupertinoOverrideTheme,
    Iterable<_i7.ThemeExtension<dynamic>>? extensions,
    _i2.InputDecorationTheme? inputDecorationTheme,
    _i7.MaterialTapTargetSize? materialTapTargetSize,
    _i4.PageTransitionsTheme? pageTransitionsTheme,
    _i3.TargetPlatform? platform,
    _i5.ScrollbarThemeData? scrollbarTheme,
    _i6.InteractiveInkFeatureFactory? splashFactory,
    bool? useMaterial3,
    _i7.VisualDensity? visualDensity,
    _i8.Brightness? brightness,
    _i8.Color? canvasColor,
    _i8.Color? cardColor,
    _i9.ColorScheme? colorScheme,
    _i8.Color? dialogBackgroundColor,
    _i8.Color? disabledColor,
    _i8.Color? dividerColor,
    _i8.Color? focusColor,
    _i8.Color? highlightColor,
    _i8.Color? hintColor,
    _i8.Color? hoverColor,
    _i8.Color? indicatorColor,
    _i8.Color? primaryColor,
    _i8.Color? primaryColorDark,
    _i8.Color? primaryColorLight,
    _i8.Color? scaffoldBackgroundColor,
    _i8.Color? secondaryHeaderColor,
    _i8.Color? shadowColor,
    _i8.Color? splashColor,
    _i8.Color? unselectedWidgetColor,
    _i3.IconThemeData? iconTheme,
    _i3.IconThemeData? primaryIconTheme,
    _i10.TextTheme? primaryTextTheme,
    _i10.TextTheme? textTheme,
    _i11.Typography? typography,
    _i12.AppBarTheme? appBarTheme,
    _i13.BadgeThemeData? badgeTheme,
    _i14.MaterialBannerThemeData? bannerTheme,
    _i15.BottomAppBarTheme? bottomAppBarTheme,
    _i16.BottomNavigationBarThemeData? bottomNavigationBarTheme,
    _i17.BottomSheetThemeData? bottomSheetTheme,
    _i18.ButtonBarThemeData? buttonBarTheme,
    _i19.ButtonThemeData? buttonTheme,
    _i20.CardTheme? cardTheme,
    _i21.CheckboxThemeData? checkboxTheme,
    _i22.ChipThemeData? chipTheme,
    _i23.DataTableThemeData? dataTableTheme,
    _i24.DialogTheme? dialogTheme,
    _i25.DividerThemeData? dividerTheme,
    _i26.DrawerThemeData? drawerTheme,
    _i27.DropdownMenuThemeData? dropdownMenuTheme,
    _i28.ElevatedButtonThemeData? elevatedButtonTheme,
    _i29.ExpansionTileThemeData? expansionTileTheme,
    _i30.FilledButtonThemeData? filledButtonTheme,
    _i31.FloatingActionButtonThemeData? floatingActionButtonTheme,
    _i32.IconButtonThemeData? iconButtonTheme,
    _i33.ListTileThemeData? listTileTheme,
    _i34.MenuBarThemeData? menuBarTheme,
    _i35.MenuButtonThemeData? menuButtonTheme,
    _i36.MenuThemeData? menuTheme,
    _i37.NavigationBarThemeData? navigationBarTheme,
    _i38.NavigationDrawerThemeData? navigationDrawerTheme,
    _i39.NavigationRailThemeData? navigationRailTheme,
    _i40.OutlinedButtonThemeData? outlinedButtonTheme,
    _i41.PopupMenuThemeData? popupMenuTheme,
    _i42.ProgressIndicatorThemeData? progressIndicatorTheme,
    _i43.RadioThemeData? radioTheme,
    _i44.SegmentedButtonThemeData? segmentedButtonTheme,
    _i45.SliderThemeData? sliderTheme,
    _i46.SnackBarThemeData? snackBarTheme,
    _i47.SwitchThemeData? switchTheme,
    _i48.TabBarTheme? tabBarTheme,
    _i49.TextButtonThemeData? textButtonTheme,
    _i50.TextSelectionThemeData? textSelectionTheme,
    _i51.TimePickerThemeData? timePickerTheme,
    _i52.ToggleButtonsThemeData? toggleButtonsTheme,
    _i53.TooltipThemeData? tooltipTheme,
    _i8.Color? accentColor,
    _i8.Brightness? accentColorBrightness,
    _i10.TextTheme? accentTextTheme,
    _i3.IconThemeData? accentIconTheme,
    _i8.Color? buttonColor,
    bool? fixTextFieldOutlineLabel,
    _i8.Brightness? primaryColorBrightness,
    _i3.AndroidOverscrollIndicator? androidOverscrollIndicator,
    _i8.Color? toggleableActiveColor,
    _i8.Color? selectedRowColor,
    _i8.Color? errorColor,
    _i8.Color? backgroundColor,
    _i8.Color? bottomAppBarColor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #applyElevationOverlayColor: applyElevationOverlayColor,
            #cupertinoOverrideTheme: cupertinoOverrideTheme,
            #extensions: extensions,
            #inputDecorationTheme: inputDecorationTheme,
            #materialTapTargetSize: materialTapTargetSize,
            #pageTransitionsTheme: pageTransitionsTheme,
            #platform: platform,
            #scrollbarTheme: scrollbarTheme,
            #splashFactory: splashFactory,
            #useMaterial3: useMaterial3,
            #visualDensity: visualDensity,
            #brightness: brightness,
            #canvasColor: canvasColor,
            #cardColor: cardColor,
            #colorScheme: colorScheme,
            #dialogBackgroundColor: dialogBackgroundColor,
            #disabledColor: disabledColor,
            #dividerColor: dividerColor,
            #focusColor: focusColor,
            #highlightColor: highlightColor,
            #hintColor: hintColor,
            #hoverColor: hoverColor,
            #indicatorColor: indicatorColor,
            #primaryColor: primaryColor,
            #primaryColorDark: primaryColorDark,
            #primaryColorLight: primaryColorLight,
            #scaffoldBackgroundColor: scaffoldBackgroundColor,
            #secondaryHeaderColor: secondaryHeaderColor,
            #shadowColor: shadowColor,
            #splashColor: splashColor,
            #unselectedWidgetColor: unselectedWidgetColor,
            #iconTheme: iconTheme,
            #primaryIconTheme: primaryIconTheme,
            #primaryTextTheme: primaryTextTheme,
            #textTheme: textTheme,
            #typography: typography,
            #appBarTheme: appBarTheme,
            #badgeTheme: badgeTheme,
            #bannerTheme: bannerTheme,
            #bottomAppBarTheme: bottomAppBarTheme,
            #bottomNavigationBarTheme: bottomNavigationBarTheme,
            #bottomSheetTheme: bottomSheetTheme,
            #buttonBarTheme: buttonBarTheme,
            #buttonTheme: buttonTheme,
            #cardTheme: cardTheme,
            #checkboxTheme: checkboxTheme,
            #chipTheme: chipTheme,
            #dataTableTheme: dataTableTheme,
            #dialogTheme: dialogTheme,
            #dividerTheme: dividerTheme,
            #drawerTheme: drawerTheme,
            #dropdownMenuTheme: dropdownMenuTheme,
            #elevatedButtonTheme: elevatedButtonTheme,
            #expansionTileTheme: expansionTileTheme,
            #filledButtonTheme: filledButtonTheme,
            #floatingActionButtonTheme: floatingActionButtonTheme,
            #iconButtonTheme: iconButtonTheme,
            #listTileTheme: listTileTheme,
            #menuBarTheme: menuBarTheme,
            #menuButtonTheme: menuButtonTheme,
            #menuTheme: menuTheme,
            #navigationBarTheme: navigationBarTheme,
            #navigationDrawerTheme: navigationDrawerTheme,
            #navigationRailTheme: navigationRailTheme,
            #outlinedButtonTheme: outlinedButtonTheme,
            #popupMenuTheme: popupMenuTheme,
            #progressIndicatorTheme: progressIndicatorTheme,
            #radioTheme: radioTheme,
            #segmentedButtonTheme: segmentedButtonTheme,
            #sliderTheme: sliderTheme,
            #snackBarTheme: snackBarTheme,
            #switchTheme: switchTheme,
            #tabBarTheme: tabBarTheme,
            #textButtonTheme: textButtonTheme,
            #textSelectionTheme: textSelectionTheme,
            #timePickerTheme: timePickerTheme,
            #toggleButtonsTheme: toggleButtonsTheme,
            #tooltipTheme: tooltipTheme,
            #accentColor: accentColor,
            #accentColorBrightness: accentColorBrightness,
            #accentTextTheme: accentTextTheme,
            #accentIconTheme: accentIconTheme,
            #buttonColor: buttonColor,
            #fixTextFieldOutlineLabel: fixTextFieldOutlineLabel,
            #primaryColorBrightness: primaryColorBrightness,
            #androidOverscrollIndicator: androidOverscrollIndicator,
            #toggleableActiveColor: toggleableActiveColor,
            #selectedRowColor: selectedRowColor,
            #errorColor: errorColor,
            #backgroundColor: backgroundColor,
            #bottomAppBarColor: bottomAppBarColor,
          },
        ),
        returnValue: _FakeThemeData_52(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #applyElevationOverlayColor: applyElevationOverlayColor,
              #cupertinoOverrideTheme: cupertinoOverrideTheme,
              #extensions: extensions,
              #inputDecorationTheme: inputDecorationTheme,
              #materialTapTargetSize: materialTapTargetSize,
              #pageTransitionsTheme: pageTransitionsTheme,
              #platform: platform,
              #scrollbarTheme: scrollbarTheme,
              #splashFactory: splashFactory,
              #useMaterial3: useMaterial3,
              #visualDensity: visualDensity,
              #brightness: brightness,
              #canvasColor: canvasColor,
              #cardColor: cardColor,
              #colorScheme: colorScheme,
              #dialogBackgroundColor: dialogBackgroundColor,
              #disabledColor: disabledColor,
              #dividerColor: dividerColor,
              #focusColor: focusColor,
              #highlightColor: highlightColor,
              #hintColor: hintColor,
              #hoverColor: hoverColor,
              #indicatorColor: indicatorColor,
              #primaryColor: primaryColor,
              #primaryColorDark: primaryColorDark,
              #primaryColorLight: primaryColorLight,
              #scaffoldBackgroundColor: scaffoldBackgroundColor,
              #secondaryHeaderColor: secondaryHeaderColor,
              #shadowColor: shadowColor,
              #splashColor: splashColor,
              #unselectedWidgetColor: unselectedWidgetColor,
              #iconTheme: iconTheme,
              #primaryIconTheme: primaryIconTheme,
              #primaryTextTheme: primaryTextTheme,
              #textTheme: textTheme,
              #typography: typography,
              #appBarTheme: appBarTheme,
              #badgeTheme: badgeTheme,
              #bannerTheme: bannerTheme,
              #bottomAppBarTheme: bottomAppBarTheme,
              #bottomNavigationBarTheme: bottomNavigationBarTheme,
              #bottomSheetTheme: bottomSheetTheme,
              #buttonBarTheme: buttonBarTheme,
              #buttonTheme: buttonTheme,
              #cardTheme: cardTheme,
              #checkboxTheme: checkboxTheme,
              #chipTheme: chipTheme,
              #dataTableTheme: dataTableTheme,
              #dialogTheme: dialogTheme,
              #dividerTheme: dividerTheme,
              #drawerTheme: drawerTheme,
              #dropdownMenuTheme: dropdownMenuTheme,
              #elevatedButtonTheme: elevatedButtonTheme,
              #expansionTileTheme: expansionTileTheme,
              #filledButtonTheme: filledButtonTheme,
              #floatingActionButtonTheme: floatingActionButtonTheme,
              #iconButtonTheme: iconButtonTheme,
              #listTileTheme: listTileTheme,
              #menuBarTheme: menuBarTheme,
              #menuButtonTheme: menuButtonTheme,
              #menuTheme: menuTheme,
              #navigationBarTheme: navigationBarTheme,
              #navigationDrawerTheme: navigationDrawerTheme,
              #navigationRailTheme: navigationRailTheme,
              #outlinedButtonTheme: outlinedButtonTheme,
              #popupMenuTheme: popupMenuTheme,
              #progressIndicatorTheme: progressIndicatorTheme,
              #radioTheme: radioTheme,
              #segmentedButtonTheme: segmentedButtonTheme,
              #sliderTheme: sliderTheme,
              #snackBarTheme: snackBarTheme,
              #switchTheme: switchTheme,
              #tabBarTheme: tabBarTheme,
              #textButtonTheme: textButtonTheme,
              #textSelectionTheme: textSelectionTheme,
              #timePickerTheme: timePickerTheme,
              #toggleButtonsTheme: toggleButtonsTheme,
              #tooltipTheme: tooltipTheme,
              #accentColor: accentColor,
              #accentColorBrightness: accentColorBrightness,
              #accentTextTheme: accentTextTheme,
              #accentIconTheme: accentIconTheme,
              #buttonColor: buttonColor,
              #fixTextFieldOutlineLabel: fixTextFieldOutlineLabel,
              #primaryColorBrightness: primaryColorBrightness,
              #androidOverscrollIndicator: androidOverscrollIndicator,
              #toggleableActiveColor: toggleableActiveColor,
              #selectedRowColor: selectedRowColor,
              #errorColor: errorColor,
              #backgroundColor: backgroundColor,
              #bottomAppBarColor: bottomAppBarColor,
            },
          ),
        ),
      ) as _i7.ThemeData);
  @override
  void debugFillProperties(_i54.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  _i3.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i54.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_53(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i3.DiagnosticsNode);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i55.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);
  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);
  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);
  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);
  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);
  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);
  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);
  @override
  _i56.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i56.Future<bool>.value(false),
      ) as _i56.Future<bool>);
  @override
  _i56.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i56.Future<bool>.value(false),
      ) as _i56.Future<bool>);
  @override
  _i56.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i56.Future<bool>.value(false),
      ) as _i56.Future<bool>);
  @override
  _i56.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i56.Future<bool>.value(false),
      ) as _i56.Future<bool>);
  @override
  _i56.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i56.Future<bool>.value(false),
      ) as _i56.Future<bool>);
  @override
  _i56.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i56.Future<bool>.value(false),
      ) as _i56.Future<bool>);
  @override
  _i56.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i56.Future<bool>.value(false),
      ) as _i56.Future<bool>);
  @override
  _i56.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i56.Future<bool>.value(false),
      ) as _i56.Future<bool>);
  @override
  _i56.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i56.Future<void>.value(),
        returnValueForMissingStub: _i56.Future<void>.value(),
      ) as _i56.Future<void>);
}
